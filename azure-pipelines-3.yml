# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  project: 'Itan.Database/Itan.Database.csproj'

steps:

  - task: DotNetCoreCLI@2
    displayName: dotnet restore
    inputs:
      command: restore
      projects: '$(project)'
  
  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      command: build
      projects: '$(project)'

  - task: AzureKeyVault@1
    inputs:
      azureSubscription: 'PAYG (itan) (jarek@codeblast.pl)'
      KeyVaultName: 'itan-key-vault'
      SecretsFilter: '*'
      RunAsPreJob: true
  
  - task: PowerShell@2
    displayName: Set enviroment variable
    inputs:
      targetType: inline
      script: |
            Write-Host "##vso[task.setvariable variable=SqlAdminConnectionString;]$(SqlAdminConnectionString)"
            Write-Host "##vso[task.setvariable variable=dupa;]'dupaaaaa'"

  - task: DotNetCoreCLI@2
    inputs:
        command: 'custom'
        custom: 'tool'
        arguments: 'install --global dotnet-ef'

  - task: DotNetCoreCLI@2
    displayName: 'Create migration'
    continueOnError: true
    inputs:
      command: custom
      custom: ef
      arguments: 'migrations script -i -o migration.sql' 
      workingDirectory: 'Itan.Database'

  - task: DotNetCoreCLI@2
    continueOnError: true
    inputs:
        command: 'custom'
        custom: 'ef'
        arguments: 'migrations list --project $(project) --startup-project $(project) --msbuildprojectextensionspath Itan.Database/obj/local'
  - task: DotNetCoreCLI@2
    inputs:
        command: 'custom'
        custom: 'ef'
        arguments: 'migrations script -i -o $(Build.ArtifactStagingDirectory)\migration.sql --project $(project) --startup-project $(project) --msbuildprojectextensionspath obj/local'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'artifact.itan.database'


