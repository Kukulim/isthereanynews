@page "/channels"
@using Itan.Ui.Services

<div class="row full-height no-scroll">
    <div class="col-4">
        @if (channelsViewModel.Channels.Any())
        {
            <div class="list-group">
                @foreach (var channel in channelsViewModel.Channels)
                {
                    <button type="button"
                            class="list-group-item list-group-item-action"
                            @onclick="@(async () => await channelsViewModel.OnChannelClickedAsync(channel.Id) )">
                        <div class="media" style="width:100%">
                            <img src="http://lorempixel.com/32/32/" class="mr-3" style="width: 10%" />
                            <div class="media-body" style="width: 90%">
                                <h5 class="mt-0 channel-title" alt="@channel.Title">
                                    @channel.Title
                                    <span class="badge badge-secondary float-right">@channel.NewsCount</span>
                                </h5>
                            </div>
                        </div>
                    </button>
                }
            </div>
        }
        else
        {
            <h1>
                No channels to display
            </h1>
        }
    </div>
    @if (channelsViewModel.News.Any())
    {
        <div class="col-8 flex-height">
            <h1>TITLE</h1>
            @foreach (var news in channelsViewModel.News)
            {
                <div class="media">
                    <img src="http://lorempixel.com/64/64/" class="mr-3">
                    <div class="media-body"
                         @onclick="@(async () => await news.OnClickAsync())">
                        <h5 class="mt-0">@news.Title</h5>
                        <div class="@news.CssVisibilityClass">
                            <div>
                                @news.Content
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code
{
    protected override async Task OnInitializedAsync()
    {
        this.channelsViewModel = new ChannelsViewModel();
        await this.channelsViewModel.OnInitializedAsync();
    }

    private ChannelsViewModel channelsViewModel;
}
